{
   "top_projects":[

      {
         "title":"Brainy Noise",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_b9bdfb4e9dd54703b11bfb6845947954~mv2.png",
            "https://static.wixstatic.com/media/07fea2_8087ff7be5da4d618b96aa10ec2f0f93~mv2.png",
            "https://static.wixstatic.com/media/07fea2_3ce64c0661a54c26965175a98768002a~mv2.png"
         ],
         "description":"web prototype that allows to load magnetic resonances of the human brain and by using a machine learning model, obtains an answer with the identification of the noise level (presence or absence) of the images. During the development of the project, a model of Convolutional Neural Networks was developed. This is framed in the Artificial Intelligence area and its implementation was based on training, validation, testing and subsequent deployment. At the end, the applied model is the one that allows the identification of the noise level for each one of the magnetic resonances of the human brain.\nAdditionally, a file is generated with the result of the classification that is compatible with the information handled in the research area of the Faculty of Medicine of the Pontificia Universidad Javeriana and the Hospital San Ignacio. This can be downloaded once the result is obtained and the user can view it in the web prototype.",
         "links":[
            {"url": "https://github.com/Proyecto-de-Grado-Brainy-Noise","name": "Repositories"},
            {"url": "https://www.overleaf.com/read/pnsbzrgrwzqz","name": "Paper"}
         ]
      },

      {
         "title":"Carvi",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_881e63a05605400490285c80606bf2a0~mv2.png",
            "https://static.wixstatic.com/media/07fea2_a369cf7d14784c43b4bb459e627c7708~mv2.png",
            "https://static.wixstatic.com/media/07fea2_009d561c20944d64aa6e1fc823b8d40f~mv2.png"
         ],
         "description":"CarVi is a mobile application that offers the ability to capture photos of vehicles and obtain relevant information about them. The app uses two models to achieve this. First, it uses a model called ResNet50, which is a pre-trained convolutional neural network. However, instead of using it directly, the model is fine-tuned to specifically adapt it for the purpose of vehicle recognition. Fine-tuning involves retraining the model using a custom dataset, allowing model weights and features to be tuned to improve its accuracy in the vehicle recognition task. Second, CarVi uses an approach called Segment Anything Model (SAM) developed by Meta. SAM is used to remove the \"noise\" from the captured image of the vehicle, that is, its background and therefore only capture the vehicle. Segment Anything model helps to focus the model's attention on the most important regions of the image, which helps improve the quality and clarity of the information obtained from the vehicle.",
         "links":[
            {"url": "https://github.com/Sebas102507/carvi_app","name": "Frontend Repository"},
            {"url": "https://github.com/Sebas102507/Carvi_Deep_Learning_Mobile_App/tree/main","name": "Backend Repository"},
            {"url": "https://www.overleaf.com/read/wtrkvkqnnvch","name": "Paper"}
         ]
      },

      {
         "title":"Litnine Cannabis",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_51d5faf1e923418b9a563821b6a0ee3e~mv2.png",
            "https://static.wixstatic.com/media/07fea2_27169f5ef87c4baca0a66854a247db75~mv2.png",
            "https://static.wixstatic.com/media/07fea2_8283d12eb2e7466fa35cebe10249506d~mv2.png"
         ],
         "description":"Litnine and Litnine Tiendas are two mobile applications in Colombia that create a specialized marketplace for the cannabis industry. Litnine connects consumers with cannabis shops, offering a wide range of products such as cannabis varieties, medicinal items, and accessories. Users can make purchases directly through the app and have them delivered to their homes. Litnine Tiendas, on the other hand, is designed for cannabis stores, providing them with an online sales platform to showcase their inventory, describe products, and manage transactions with consumers. These applications prioritize safety, reliability, and compliance with legal regulations in Colombia, ensuring that consumers have clear information about the products. They aim to create a convenient and accessible experience for those interested in purchasing medical and recreational cannabis-related products.",
         "links":[
            {"url": "https://www.litnine.com","name": "Web Page"}
         ]
      },

      {
         "title":"MeteoNet",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_e113a392d62c45c98d54f0e5f886e40b~mv2.png",
            "https://static.wixstatic.com/media/07fea2_17accfd352ec4454af7d7e1daaf3258f~mv2.png",
            "https://static.wixstatic.com/media/07fea2_2d7c9f24a85f45298d2d52295fadf086~mv2.png"
         ],
         "description":"MeteoNet is a data set published by the French meteorological service METEO FRANCE for the community to propose analyzes and models using climate data.\nSome of the data available in MeteoNet are the historical meteorological observations of sensors that measure temperature, humidity, pressure, wind in different stations located throughout the French territory, given the above, a meteorological station was chosen to analyze and through the use of networks recurrent neural pathways create a predictive model of temperature and precipitation at the weather station.",
         "links":[
            {"url": "https://github.com/Sebas102507/MeteoNetForecasting/tree/main","name": "Repository"},
            {"url": "https://www.overleaf.com/read/kbgmfnzdmtdm","name": "Paper"}
         ]
      },

      {
         "title":"Music Genre Classifier",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_dc563444a20c458692315d0d932d0733~mv2.png",
            "https://static.wixstatic.com/media/07fea2_f59ecc69fdf54217b7f769141358fb0d~mv2.png",
            "https://static.wixstatic.com/media/07fea2_65701c439c664d898364726e416bab82~mv2.png"
         ],
         "description":"The objective of the application is to predict the genre of 30-second audio clips submitted by users. The models used for prediction are trained using the GTZAN music dataset. The application has several functional requirements:\n\nPrediction: Users can upload a .wav audio file, not exceeding 30 seconds in length. The system will then predict the genre of the audio and provide the result to the user.\nResult Retrieval: The system allows users to access all the calculated results obtained from previous prediction requests.\nAudio Storage: The system maintains a persistent storage for the audio files uploaded by users. This enables comparisons between the audio played and the corresponding prediction.\nModel Modification: The system administrator has the capability to easily change the trained model used for predictions. However, training the model directly within the system's hardware components is not required. The model can be trained externally and then integrated into the system.",
         "links":[
            {"url": "https://github.com/Sebas102507/music_gender_app_classifier_with_NN","name": "Repository"},
            {"url": "https://www.overleaf.com/read/xspmvrhxdbrp","name": "Paper"}
         ]
      },

      {
         "title":"Rubik's Cube Deep Q-Network",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_cecbf35889794387a187f55211b5051d~mv2.png",
            "https://static.wixstatic.com/media/07fea2_db892c39da234993ab4a19a76d5f6707~mv2.png",
            "https://static.wixstatic.com/media/07fea2_b07c339241854d5aa46a4e1654ccea35~mv2.png"
         ],
         "description":"The project aims to develop an artificial intelligence model using Deep Q-Networks (DNQ) to automatically solve the Rubik's cube puzzle. The model employs reinforcement learning, where an AI agent learns to make decisions based on the cube's current state and available actions to move its faces. Through a combination of exploration and exploitation, the agent discovers new strategies and improves its performance.\n\nDuring training, the model receives positive rewards for progress towards a solution and negative rewards for moving away from it. As the agent continues training, it is expected to become more efficient and solve the Rubik's cube in fewer moves.\n\nOnce trained, the model can autonomously solve the Rubik's cube by evaluating the cube's current state and selecting optimal actions. The outcome is an efficient AI model capable of automatically solving the Rubik's cube puzzle.",
         "links":[
            {"url": "https://github.com/Sebas102507/RubikCubeDQN","name": "Repository"},
            {"url": "https://www.overleaf.com/read/wdhxkcbpfzdz","name": "Paper"}
         ]
      },

      {
         "title":"Sign Language AI Classifier",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_81f2cf2e20a0492eb46a262e6a461b5f~mv2.png",
            "https://static.wixstatic.com/media/07fea2_08cf77e09f8b43f7a38fae6454bb86ac~mv2.png",
            "https://static.wixstatic.com/media/07fea2_d6b7354305184031bbf61b8b5ee18bf1~mv2.png"
         ],
         "description":"The project focuses on sign language classification using the \"sign-language-mnist\" dataset. Three approaches were implemented: training a convolutional network from scratch, using transfer learning with pre-trained networks like VGG16 or ResNet, and employing transfer learning with the MobileNet V2 convolutional network. The first approach involves designing and training a network specifically for sign language. The second approach adapts pre-trained networks to the sign language dataset, benefiting from prior knowledge and expediting training. The third approach utilizes MobileNet V2, an efficient architecture for computer vision on mobile devices, leveraging its pre-trained model on a large dataset for accurate sign language classification. These approaches provide different strategies for effectively classifying signs of sign language in the project.",
         "links":[
            {"url": "https://github.com/Sebas102507/SignLanguageAiClassifier/tree/main","name": "Repository"},
            {"url": "https://www.overleaf.com/read/kbgmfnzdmtdm","name": "Paper"}
         ]
      },

      {
         "title":"Stock LSTM Forecasting",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_4c235c10da6743deb13c104f524179e4~mv2.png",
            "https://static.wixstatic.com/media/07fea2_47940a03eb424699a75d9b022512102e~mv2.png",
            "https://static.wixstatic.com/media/07fea2_b74593c918544df0abb25a83e5d151d9~mv2.png"
         ],
         "description":"The project aims to predict the price of The Home Depot (HD) company's shares using a recurrent neural network LSTM (Long Short-Term Memory). The process involves data engineering to gather relevant data for model training.\n\nHistorical data for The Home Depot stock price is collected, along with data for metrics such as the Annual Current Ratio, PE Ratio, Debt Equity Ratio, Turnover, ROE, PS Ratio, CPI (Consumer Price Index), and Interest rates. These data are obtained from reliable sources, such as financial databases or online data services.\n\nOnce the LSTM model is trained, it is used to predict the future stock price. Historical data and related characteristics are utilized to forecast The Home Depot's stock price for a specific future period.\n\nThe model's performance is evaluated using appropriate metrics like mean square error (MSE) or coefficient of determination (R2) to assess its accuracy and reliability.",
         "links":[
            {"url": "https://github.com/Sebas102507/LSTMStockForecasting/tree/main","name": "Repository"}
         ]
      },

      {
         "title":"LSTM Simpson's Chapter Script Generator",
         "imageUrls": [
            "https://static.wixstatic.com/media/07fea2_a0ae6adc782c47898a91ceff8982b195~mv2.png",
            "https://static.wixstatic.com/media/07fea2_7c0d1513cbbe40e084a5a683df1226f6~mv2.png",
            "https://static.wixstatic.com/media/07fea2_c6757232dec24ece9355fbab31fb0479~mv2.png"
         ],
         "description":"The objective is to use LSTM, a recurrent neural network, to generate new chapters for \"The Simpsons\" TV show. A database of all existing transcripts will be leveraged to train the LSTM model on the show's patterns, language, and comedic style. Steps include creating a clean dataset, implementing the LSTM architecture, and training the model to predict the next word or phrase based on preceding words. Once trained, the LSTM model can generate new chapters using user prompts or random seeds, utilizing its knowledge of \"The Simpsons\" language and style. The generated chapters will capture the beloved series' humor, character dynamics, and storytelling elements that have contributed to its enduring popularity.",
         "links":[
            {"url": "https://github.com/Sebas102507/RNNSimpsonsChapterGenerator/tree/main","name": "Repository"}
         ]
      }

   ]
}
